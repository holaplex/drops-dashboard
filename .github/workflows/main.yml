name: CI

on:
  push:
    branches: [ main, dev, staging, mpw/adding-cicd ]

jobs:
  build:
    name: Building and Pushing Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      id: login-registry
      run: doctl registry login --expiry-seconds 1200

    - name: Build, tag, and push images to registry
      #if: github.ref == 'refs/heads/main'
      id: build-image-main
      env:
        REGISTRY: registry.digitalocean.com/clr
        REPOSITORY: ${{ github.event.repository.name }}
      run: |
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        repo=drop-dashboard
        app=frontend
        image_tag="$REGISTRY/$REPOSITORY:$repo-$app-${GITHUB_REF##*/}-$git_hash"
        docker build -t $image_tag ./$app
        docker push $REGISTRY/$REPOSITORY:$repo-${GITHUB_REF##*/}-$git_hash
        echo "::set-output name=image::$REGISTRY/$REPOSITORY:${GITHUB_REF##*/}-$git_hash"
        app=backend
        image_tag="$REGISTRY/$REPOSITORY:$repo-$app-${GITHUB_REF##*/}-$git_hash"
        docker build -t $image_tag ./$app
        docker push $REGISTRY/$REPOSITORY:${GITHUB_REF##*/}-$git_hash
        echo "::set-output name=image::$REGISTRY/$REPOSITORY:${GITHUB_REF##*/}-$git_hash"


  # - name: Triggering deployment update in remote repository
  #   uses: actions/github-script@v6
  #   env:
  #     BRANCH: ${{ github.ref_name }}
  #   with:
  #     github-token: ${{ secrets.ACTIONS_TOKEN }}
  #     script: |
  #       await github.rest.actions.createWorkflowDispatch({
  #         owner: 'holaplex',
  #         repo: 'campus-legends-k8s',
  #         workflow_id: 'drops-dashboard.yaml',
  #         ref: process.env.BRANCH
  #       })
